services:
  app1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-app-1
    restart: unless-stopped
    networks:
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.20"
          memory: 30M
    environment:
      - APP_ENV=production
      - PORT=8080
      - INSTANCE_ID=1

  app2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-app-2
    restart: unless-stopped
    networks:
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.20"
          memory: 30M
    environment:
      - APP_ENV=production
      - PORT=8080
      - INSTANCE_ID=2

  haproxy:
    image: haproxy:2.9-alpine
    container_name: haproxy-lb
    restart: unless-stopped
    ports:
      - "9999:80"
    networks:
      - payment-processor
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: 50M
    depends_on:
      - app1
      - app2

  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: unless-stopped
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    environment:
      POSTGRES_DB: onecent
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: secret123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
    networks:
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 140M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d onecent"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
    driver: local

networks:
  payment-processor:
    name: payment-processor
    driver: bridge
